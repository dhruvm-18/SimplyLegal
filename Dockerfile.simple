# Ultra-optimized Dockerfile for Railway deployment
FROM python:3.11-alpine

WORKDIR /app

# Create non-root user first
RUN adduser -D -s /bin/sh appuser

# Install minimal system dependencies in single layer
RUN apk add --no-cache --virtual .runtime-deps \
    curl \
    poppler-utils \
    tesseract-ocr \
    && rm -rf /var/cache/apk/* /tmp/* /var/tmp/*

# Copy and install Python dependencies with aggressive cleanup
COPY requirements.minimal.txt requirements.txt
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt && \
    pip cache purge && \
    rm -rf /root/.cache /tmp/* /var/tmp/* requirements.txt

# Copy only essential files
COPY minimal_backend.py config.py prompts.py ./

# Create directories and set permissions
RUN mkdir -p uploads processed static cache data && \
    chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Set environment variables
ENV FLASK_ENV=production \
    PYTHONPATH=/app \
    PORT=8080 \
    PYTHONUNBUFFERED=1

EXPOSE 8080

# Use minimal startup
CMD ["python", "minimal_backend.py"]