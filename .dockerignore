# === AGGRESSIVE DOCKERIGNORE FOR SIZE OPTIMIZATION ===

# Node.js artifacts (exclude everything except build output)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package*.json
src/
public/
.npm/
.yarn/

# Python cache and environments
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
env/
venv/
.venv/
pip-log.txt
.tox/
.coverage*
.cache/
.mypy_cache/
.pytest_cache/
.hypothesis/

# Large ML/AI files and models
models/
*.model
*.bin
*.h5
*.pkl
*.joblib
*.pt
*.pth
*.onnx
faiss_index.*
*.npy
*.npz

# Data directories and uploads
uploads/
processed/
cache/
data/
test_data/
*.sqlite
*.db

# Media and document files
*.mp4
*.avi
*.mov
*.mkv
*.jpg
*.jpeg
*.png
*.gif
*.bmp
*.tiff
*.pdf
*.doc
*.docx
*.ppt
*.pptx
*.xls
*.xlsx

# Development and build artifacts
build/
dist/
.next/
.nuxt/
coverage/
.nyc_output/

# OS and editor files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
.vscode/
.idea/
*.swp
*.swo
*~

# Environment and config files
.env*
!.env.example
.config/

# Git and version control
.git/
.gitignore
.gitattributes
.gitmodules

# Documentation
README.md
*.md
docs/
documentation/

# Docker files (exclude all except the one we're using)
Dockerfile.old
Dockerfile.backup
Dockerfile.minimal
Dockerfile.optimized
docker-compose*

# Deployment configs
railway.json
vercel.json
netlify.toml
.railway/

# Test files
test/
tests/
spec/
__tests__/
*.test.js
*.test.py
*.spec.js
*.spec.py
jest.config.*
cypress/

# Logs
*.log
logs/

# Temporary files
*.tmp
*.temp
.tmp/
.temp/

# Requirements files (exclude heavy ones)
requirements.txt
requirements-dev.txt
# Keep only minimal
!requirements.minimal.txt

# Include only essential Python files
backend.py
production_backend.py
railway_backend.py
action_items_manager.py
data_manager.py
deep_analysis_manager.py
summary_manager.py
frontend_routes.py

# Keep essential files
!minimal_backend.py
!config.py
!prompts.py